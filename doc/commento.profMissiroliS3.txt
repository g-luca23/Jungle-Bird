Checklist S3
Prodotto online: PRESENTE
User Stories (Taiga/Text)
	Presenti Burndown
	Buona discussione e movimento in taiga

Documenti: Non aggiornati. Sicuri di ciò?


Sprint preparation: 
	Sprint goal esplicitato (un po' tecnico, ma va)
	DOD e DOR sono fuori fuoco, sono in pratica condizioni di accettazione di US. 
	Le DOD e DOR sono comuni a tutte le US di uno sprint (cfr. esempi in giro)
Sprint review: 
	S1:Caricato demo, ma va esplicitato QUALE US SI STA MOSTRANDO , in modo da
	giustificare l'approvazione da parte del PO.
	S2: Buono
	S3: Caricato demo, OK ma dovevate mettere il link!
Retrospective: 
	S1:Presente nel documento, ma troppo tirata via
	S2:Idem. Mancano azioni precise da fare, assegnare "verificatori" ecc. Provate
	   a cambiare metodo di retrospettiva. 
	S3: presente, buona
Git Stats: Tag presenti
	I contributi sono divisi in modo non uniformi tra i membri
Testing/Coverage: Test quasi inesistenti
SQ: Installato, ma valutazioni non esaltati
Devops: OK

*** COMMENTI ****
Apro una parentesi, per favore
non date l’opportunità di programmare in qualsiasi linguaggio agli studenti,
perché se poi, come nel nostro caso, il linguaggio più comodo non funziona
con SonarQube, il team perde tempo a dover tradurre tutto il lavoro fatto.)

Vero, ma in realtà come sappiamo questa per fortuna è una esperienza didattica e non lavorativa. 
Quindi la scelta di cambiare linguaggio per motivazioni estrinseche è una possibilità reale che 
voi avete sperimentato, e magari vi servirà in futuro. 
In realtà altri gruppi con problemi simili hanno trovato soluzioni alternative, anche contrattando con noi docenti (es: un altro programma che calcola il coverage, altre suite di test...)

@gianlu.montefiori@gmail.com OKKIO ai nick che usi. Qui non siamo bacchettoni, ma magari questa roba va a finire in un repo pubblico, e la gente si può fare dei pregiudizi.





